generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model collaborations {
  id         Int     @id @default(autoincrement())
  user_id    Int?
  task_id    Int?
  remarks    String? @db.Text
  created_at String? @db.Text
  tasks      tasks?  @relation(fields: [task_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "collaborations_ibfk_1")
  users      users?  @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "collaborations_ibfk_2")

  @@index([task_id], map: "task_id")
  @@index([user_id, task_id], map: "user_id")
}

model task_comments {
  id          Int      @id @default(autoincrement())
  user_id     Int?
  task_id     Int?
  created_at  DateTime @default(now()) @db.Timestamp(0)
  description String?  @db.Text
  tasks       tasks?   @relation(fields: [task_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "task_comments_ibfk_1")
  users       users?   @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "task_comments_ibfk_2")

  @@index([task_id], map: "task_id")
  @@index([user_id], map: "user_id")
}

model task_history {
  id          Int      @id @default(autoincrement())
  description String?  @db.Text
  time_stamp  DateTime @default(now()) @db.Timestamp(0)
  task_id     Int?
  user_id     Int?
  tasks       tasks?   @relation(fields: [task_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "task_history_ibfk_1")
  users       users?   @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "task_history_ibfk_2")

  @@index([task_id], map: "task_id")
  @@index([user_id], map: "user_id")
}

model tasks {
  id             Int              @id @default(autoincrement())
  title          String?          @db.Text
  description    String?          @db.Text
  scheduled_time String?          @db.Text
  status         String?          @db.Text
  tags           String?          @db.Text
  date_created   DateTime         @default(now()) @db.Timestamp(0)
  remarks        String?          @db.Text
  time_spent     String?          @db.Text
  user_id        Int?
  collaborations collaborations[]
  task_comments  task_comments[]
  task_history   task_history[]
  users          users?           @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "tasks_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  id             Int              @id @default(autoincrement())
  user_name      String?          @db.VarChar(255)
  email          String           @db.VarChar(255)
  password       String           @db.Text
  collaborations collaborations[]
  task_comments  task_comments[]
  task_history   task_history[]
  tasks          tasks[]
}
